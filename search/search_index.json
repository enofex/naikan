{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Get Started View on GitHub </p> <p>Naikan is a powerful open source inventory management tool for developer teams, that allows organizations to keep track of critical information related to their software projects. It enables users to manage their projects' essential details, including project name, organization, team, contacts, developers, integrations, licenses, deployments, environments, and technologies used. The tool can be integrated into CI/CD pipelines to automatically push data for new projects and updates.</p>"},{"location":"#automatic-cicd-integration-for-pushing-project-information-to-naikan","title":"Automatic CI/CD Integration for Pushing Project Information to Naikan","text":"<p>By integrating the CI/CD pipeline with Naikan, project information can be seamlessly transferred, ensuring up-to-date and accurate data for monitoring and analysis purposes.</p> <p> </p>"},{"location":"#workflow-steps","title":"Workflow Steps","text":"<ul> <li> <p>Naikan Maven Plugin Configuration: Begin by configuring the Maven Naikan Plugin within your project's Maven POM file. This Plugin will extract all information automatically and created a JSON file you can push to Naikan. </p> </li> <li> <p>JSON File Configuration (Optional): Create a JSON file that contains the necessary project information you want to override from the generated file created by the Naikan Maven Plugin.The JSON file should follow a predefined structure to ensure compatibility with Naikan's data   requirements.</p> </li> <li> <p>Custom Provider (Optional): One of the standout features of the Naikan Maven Plugin is its support for custom providers. Developers have the freedom to define their own data providers, allowing for tailored integration. This extensibility enables the plugin to adapt to the unique needs and structures of different projects. Additionally, the plugin offers the capability to fine-tune the order in which these custom providers are employed. </p> </li> <li> <p>CI/CD Pipeline Setup: Configure a CI/CD pipeline using your preferred tool (e.g., Jenkins,   GitLab CI/CD, Bamboo, Travis CI). Define the necessary pipeline stages and steps to ensure the   successful execution of the workflow.   Ensure that the pipeline has access to the JSON file containing the project information.</p> </li> <li> <p>Push to Naikan: Add a dedicated stage in the CI/CD pipeline to push the project information to   Naikan.   Utilize the appropriate Naikan API endpoint to transfer the JSON file's contents automatically.   Ensure that the pipeline has the necessary authentication tokens to access Naikan   securely.</p> </li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li> <p>Automated updates: You can automatically push new projects or update existing ones with   relevant details from your CI/CD pipeline. This helps to ensure that your software project   inventory is always up-to-date.</p> </li> <li> <p>Team management: Naikan allows you to see the teams, developers, and contacts behind each   project, making collaboration easier.</p> </li> <li> <p>Integrations: Naikan lets you manage integrations with other tools and services used by your   organization, streamlining your workflow.</p> </li> <li> <p>Technologies used: With Naikan, you can track the technologies used by each project, giving   you a clear picture of your technology stack.</p> </li> <li> <p>Deployments and environments: Naikan enables you to see deployments, versions, and   environments for each project, making it easier to manage your software projects.</p> </li> <li> <p>License management: Naikan lets you keep track of licenses for each project and ensure   compliance, preventing any potential legal issues.</p> </li> <li> <p>Git Integration: The Naikan Maven Plugin will collect Git repository information and statistics from your project and push it to Naikan as well. </p> </li> </ul>"},{"location":"#sponsors","title":"Sponsors","text":"<p>If Naikan has helped you save time and money, I invite you to support my work by becoming a sponsor. By becoming a sponsor, you enable me to continue to improve Naikan's capabilities by fixing bugs immediately and continually adding new useful features. Your sponsorship plays an important role in making Naikan even better.</p>"},{"location":"#backers","title":"Backers","text":"<p>The Open Source Community and Enofex </p>"},{"location":"#license","title":"License","text":"<p>See LICENSE.</p>"},{"location":"about/","title":"About","text":"<p>Welcome to Naikan, the ultimate open source inventory management tool for developer teams designed to streamline your software projects. With Naikan, organizations can effortlessly stay on top of critical project information, ensuring seamless project management and improved efficiency.</p> <p>Naikan is equipped with a comprehensive set of features that enable users to manage and track essential details of their projects. From the project's inception to its deployment and beyond, Naikan covers all the bases. You can easily organize information such as project name, organization, team members, contacts, developers, integrations, licenses, deployments, environments, and the technologies utilized.</p> <p>Integrating Naikan into your CI/CD pipelines takes your project management to the next level. By seamlessly pushing data for new projects and updates, Naikan ensures that your inventory remains up to date with minimal effort. This integration saves you valuable time and eliminates the risk of manual errors.</p> <p>With Naikan, you can say goodbye to scattered spreadsheets and disjointed communication. Our user-friendly interface allows you to navigate effortlessly through your project inventory, ensuring that all stakeholders have access to the right information at the right time.</p> <p></p> <p>Key Features of Naikan:</p> <ol> <li> <p>Comprehensive Project Details: Capture and manage vital project information such as project    name, organization, team members, and contacts in a centralized location.</p> </li> <li> <p>Developer Management: Keep track of your development team, assign responsibilities, and    monitor    their progress.</p> </li> <li> <p>Integrations and Licenses: Easily manage integrations with other tools and track software    licenses to ensure compliance.</p> </li> <li> <p>Deployment and Environment Tracking: Monitor deployments and maintain an overview of    different    environments associated with your projects.</p> </li> <li> <p>Technology Management: Track the technologies utilized in your projects, ensuring    transparency    and facilitating future decision-making.</p> </li> <li> <p>Seamless CI/CD Integration: Integrate Naikan into your CI/CD pipelines to automate data    updates,    eliminating manual data entry and reducing errors.</p> </li> </ol> <p>Naikan empowers organizations to optimize their software project management, enhance collaboration, and ensure accurate tracking of project details. Say goodbye to project management headaches and embrace a streamlined approach with Naikan today.</p>"},{"location":"about/#projects-overview","title":"Projects overview","text":"<p>See all projects at a glance, filter, sort and search them.</p> <p></p>"},{"location":"about/#projects-insights","title":"Projects insights","text":"<p>See all projects statistics at a glance, filter, sort and search them.</p> <p></p>"},{"location":"about/#project-details","title":"Project details","text":"<p>See detail information about your projects.</p> <ul> <li>Project base information: Name, URL, Repository, Notes, Tags...</li> <li>Organization: Name, URL, Department...</li> <li>Environments: Name, Location, Tags...</li> <li>Teams: Name</li> <li>Developers: Name, Username, Title, Department, Email, Phone...</li> <li>Contacts: Name, Title, Email, Phone, Roles...</li> <li>Documentations: Name, Location, Tags...</li> <li>Integrations: Name, URL, Tags...</li> <li>Technologies: Name, Version, Tags...</li> <li>Deployments: Environment, Location, Timestamp, Version..</li> <li>Versions: Versions, Deployments...</li> <li>Licenses: Name, URL</li> <li>and much more</li> </ul> <p></p> <p></p> <p></p>"},{"location":"about/#overview-statistics","title":"Overview statistics","text":"<p>See detail overview information and statistics about your projects.</p> <ul> <li> <p>Environments: See your environments and the projects, which are deployed to them.</p> </li> <li> <p>Teams: See your teams and the projects they are working on.</p> </li> <li> <p>Developers: See your developer and the projects they are working on.</p> </li> <li> <p>Contacts: See the contacts which are assigned to your projects.</p> </li> <li> <p>Integrations: See the integrations of your projects.</p> </li> <li> <p>Technologies: See the technologies which are used within your projects.</p> </li> <li> <p>Deployments: See all deployments of your projects on all environments.</p> </li> </ul> <p></p>"},{"location":"about/#administration","title":"Administration","text":"<p>Administrate user roles, tokens and projects.</p> <ul> <li> <p>Profile: See your profile.</p> </li> <li> <p>Users: Administrate users.</p> </li> <li> <p>Projects: See and administrate projects.</p> </li> <li> <p>Tokens: Restrict access via access tokens for the public API.</p> </li> </ul> <p></p>"},{"location":"administration/","title":"Administration","text":"<p>Administration</p> <p>For full functionality within the administration you need ADMIN roles.</p>"},{"location":"administration/#project-administration","title":"Project administration","text":"<p>In the project administration you are able to delete projects from Naikan.</p> <p></p>"},{"location":"administration/#user-administration","title":"User administration","text":"<p>In this project, we have implemented a user authentication system for our application. Upon the initial login, the first user to access the application will be granted administrative privileges.</p> <p></p>"},{"location":"administration/#implementation-details","title":"Implementation Details","text":""},{"location":"administration/#login-functionality","title":"Login Functionality","text":"<p>Users can access the application using their registered credentials.</p>"},{"location":"administration/#admin-role-assignment","title":"Admin Role Assignment","text":"<p>When a user successfully logs in, a specific check is performed to identify if they are the first user. If the user is the first one to log in, they are automatically assigned the admin role. The admin role grants additional privileges and access to specific administrative features within the application.</p>"},{"location":"administration/#admin-privileges","title":"Admin Privileges","text":"<p>The user assigned as the first admin has the ability to perform administrative tasks by accessing restricted sections of the application. The admin role ensures that the initial user has the necessary authority to administer the application.</p>"},{"location":"administration/#user-management","title":"User Management","text":"<p>Once the first user has been assigned the admin role, they can manage user accounts by granting or revoking admin privileges for other users. The admin has control over creating, modifying, or deleting tokens for the REST API.</p>"},{"location":"administration/#token-administration","title":"Token administration","text":"<p>This project requires a bearer token to securely access the API REST endpoints used for pushing data from CI/CD pipelines to Naikan and managing deployment-related information. To ensure secure access and authorization, a bearer token is required when interacting with these API endpoints.</p>"},{"location":"administration/#bearer-token-configuration","title":"Bearer Token Configuration","text":"<p>Before accessing the API endpoints, ensure that the necessary tokens are properly configured within the application, which can be done as an admin role.</p> <p></p>"},{"location":"administration/#using-the-bearer-token","title":"Using the Bearer Token","text":"<p>When making requests to the API endpoints, include the bearer token in the request headers. Add an <code>Authorization</code> header, with the value <code>Bearer [token]</code>. Replace <code>[token]</code> with the actual bearer token obtained during the token generation process.</p>"},{"location":"administration/#protecting-the-bearer-token","title":"Protecting the Bearer Token","text":"<p>Treat the bearer token as a sensitive piece of information. Store it securely and avoid exposing it in public repositories or transmitting it over insecure channels. It is recommended to use environment variables or a secure key management system to store and retrieve the bearer token.</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Thank you for your interest in contributing to Naikan! We welcome contributions from the community to help make the project even better. Here are some ways you can get involved:</p> <ul> <li> <p>Star the Project:</p> <ul> <li>Show your support by starring the project   on GitHub.</li> <li>This helps increase visibility and encourages others to discover and contribute to the   project.</li> </ul> </li> <li> <p>Review the Contribution Guide:</p> <ul> <li>Familiarize yourself with the guidelines and procedures outlined in our contribution guide.</li> <li>The contribution guide provides detailed information on how to get started and the different   ways   you can contribute.</li> </ul> </li> <li> <p>Follow Contribution Guidelines:</p> <ul> <li>Ensure that you follow our   contribution guidelines   when submitting your contributions.</li> <li>These guidelines cover aspects such as code formatting, documentation standards, and other   important considerations.</li> </ul> </li> <li> <p>Pull Requests:</p> <ul> <li>If you have improvements or fixes to propose, submit a Pull Request (PR) to the relevant   module or repository.</li> <li>Clearly describe the purpose and changes made in your PR, providing enough context for the   reviewers to understand your contribution.</li> <li>Be open to feedback and engage in discussions to refine your contribution.</li> </ul> </li> <li> <p>Bug Reports and Feature Requests:</p> <ul> <li>Help us improve Naikan by reporting any bugs or issues you encounter.</li> <li>If you have ideas for new features or enhancements, submit a feature request.</li> <li>Use the issue tracker in the respective repository to provide detailed information about the   problem or request.</li> </ul> </li> <li> <p>Spread the Word:</p> <ul> <li>Share your positive experience with Naikan and encourage others to contribute.</li> <li>Tweet about your contributions, write blog posts, or mention Naikan in relevant communities   to increase awareness.</li> </ul> </li> <li> <p>Help with Documentation:</p> <ul> <li>Contribute to improving the documentation by identifying areas that need clarification or   adding examples and tutorials.</li> <li>Submit documentation PRs to enhance the usability and understanding of Naikan.</li> </ul> </li> </ul> <p>Remember, contributions of all sizes are valuable and appreciated. We look forward to your involvement in the Naikan community. Thank you for considering contributing to the project!</p>"},{"location":"contributing/#modules","title":"Modules","text":"<p>The Naikan Project is a software that consists of four modules: naikan-test, naikan-model, naikan-maven-plugin and naikan.</p> <p> </p>"},{"location":"contributing/#naikan-module","title":"Naikan Module","text":"<p>The naikan module is the Naikan project. It provides a set of APIs and services that developers can use to register and push their applications data to Naikan. This module also contains the user interface for the application.</p>"},{"location":"contributing/#naikan-model-module","title":"Naikan Model Module","text":"<p>The naikan-model module provides the data model that represent their Naikan application data.</p>"},{"location":"contributing/#naikan-test-module","title":"Naikan Test Module","text":"<p>The naikan-test module provides a set of tools and utilities for testing this application.</p>"},{"location":"contributing/#naikan-maven-plugin-module","title":"Naikan Maven Plugin Module","text":"<p>The naikan-maven-plugin module provides a maven plugin, which allows to enrich or update the Naikan model automatically.</p>"},{"location":"contributing/#sponsor","title":"Sponsor","text":"<p>Sponsor Naikan on GitHub </p>"},{"location":"examples/","title":"Examples","text":"<p>Required properties</p> <p>The project name, specVersion and bomFormat are required. All others are optional.</p>"},{"location":"examples/#minimum-example","title":"Minimum example","text":"<pre><code>{\n  \"specVersion\": \"1.0\",\n  \"bomFormat\": \"Naikan\",\n  \"project\": {\n    \"name\": \"Naikan III\"\n }\n}\n</code></pre>"},{"location":"examples/#full-example","title":"Full example","text":"<pre><code>{\n  \"specVersion\": \"1.0\",\n  \"bomFormat\": \"Naikan\",\n  \"timestamp\": \"2022-12-29T08:29:10.079226\",\n  \"project\": {\n    \"name\": \"Naikan I\",\n    \"inceptionYear\" : \"2003\",\n    \"url\": \"https://enofex.github.io/naikan\",\n    \"repository\": \"https://github.com/enofex/naikan\",\n    \"packaging\": \"jar\",\n    \"groupId\": \"com.enofex\",\n    \"artifactId\": \"naikan-core\",\n    \"version\": \"1.0.0\",\n    \"description\": \"Naikan core module\",\n    \"notes\": \"Naikan notes\"\n  },\n  \"organization\": {\n    \"name\": \"Naikan\",\n    \"url\": \"https://enofex.github.io/naikan\",\n    \"department\": \"Software department\",\n    \"description\": \"Company projects at a glance\"\n  },\n  \"environments\": [\n    {\n      \"name\": \"Staging\",\n      \"location\": \"staging.enofex.github.io/naikan\",\n      \"description\": \"Staging description\",\n      \"tags\": [\n        \"Staging\"\n      ]\n    },\n    {\n      \"name\": \"Production\",\n      \"location\": \"enofex.github.io/naikan\",\n      \"description\": \"Production description\"\n    }\n  ],\n  \"teams\": [\n    {\n      \"name\": \"Naikan Team\",\n      \"description\": \"Naikan Core Team\"\n    }\n  ],\n  \"developers\": [\n    {\n      \"name\": \"Trev Cooksey\",\n      \"username\" : \"cytrev\",\n      \"title\": \"Principal Software Engineer\",\n      \"department\": \"Naikan Software Engineering\",\n      \"email\": \"tcooksey1@geocities.jp\",\n      \"phone\": \"1212-12-90999\",\n      \"organization\": \"Edgetag\",\n      \"organizationUrl\": \"https://www.edgetag.tech\",\n      \"timezone\": \"America/New_York\",\n      \"description\": \"Best developer!\",\n      \"roles\": [\n        \"architect\",\n        \"developer\"\n      ]\n    }\n  ],\n  \"contacts\": [\n    {\n      \"name\": \"John Doe\",\n      \"title\": \"Product Owner\",\n      \"email\": \"jdoe@example.com\",\n      \"phone\": \"461-355-2912\",\n      \"description\": \"Responsible for this project\",\n      \"roles\": [\n        \"PO\"\n      ]\n    }\n  ],\n  \"technologies\": [\n    {\n      \"name\": \"Java\",\n      \"version\": \"19\",\n      \"description\": \"Best programming language\",\n      \"tags\": [\n        \"backend\"\n      ]\n    },\n    {\n      \"name\": \"Angular\",\n      \"version\": \"15.0\",\n      \"description\": \"React or Angular\",\n      \"tags\": [\n        \"frontend\"\n      ]\n    }\n  ],\n  \"licenses\": [\n    {\n      \"name\": \"Apache-2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.txt\",\n      \"description\": \"Or MIT license?\"\n    }\n  ],\n  \"documentations\": [\n    {\n      \"name\": \"Architecture overview\",\n      \"location\": \"enofex.github.io/naikan/arch24\",\n      \"description\": \"ARC24\",\n      \"tags\": [\n        \"Architecture\",\n        \"ARC24\"\n      ]\n    },\n    {\n      \"name\": \"Technical debt\",\n      \"location\": \"wiki.enofex.github.io/naikan/techdebt\",\n      \"description\": \"Should be reduced!\"\n    }\n  ],\n  \"integrations\": [\n    {\n      \"name\": \"Bitbucket\",\n      \"url\": \"http://127.0.0.1/bitbucket/naikan\",\n      \"description\": \"Scm description\",\n      \"tags\": [\n        \"Scm\"\n      ]\n    },\n    {\n      \"name\": \"Bamboo\",\n      \"url\": \"http://127.0.0.1:8080/bamboo/naikan\",\n      \"description\": \"Ci description\"\n    },\n    {\n      \"name\": \"Jira\",\n      \"url\": \"http://127.0.0.1/jira/naikan\",\n      \"description\": \"JDD\"\n    },\n    {\n      \"name\": \"SonarQube\",\n      \"url\": \"http://127.0.0.1/sonar/naikan\",\n      \"description\": \"Great tools!\",\n      \"tags\": [\n        \"Security\"\n      ]\n    },\n    {\n      \"name\": \"DependencyTrack\",\n      \"url\": \"http://127.0.0.1/dtrack/naikan\",\n      \"description\": \"Must have!\",\n      \"tags\": [\n        \"Security\"\n      ]\n    }\n  ],\n  \"tags\": [\n    \"web\",\n    \"intern\"\n  ],\n  \"deployments\": [\n    {\n      \"environment\": \"Staging\",\n      \"location\": \"staging.enofex.github.io/naikan\",\n      \"version\": \"1.0.0\",\n      \"timestamp\": \"2022-12-28T08:29:10.079226\"\n    },\n    {\n      \"environment\": \"Production\",\n      \"location\": \"enofex.github.io/naikan\",\n      \"version\": \"1.0.1\"\n    }\n  ]\n}\n</code></pre>"},{"location":"getting-started/","title":"Getting started","text":"<p>The preferred method for production environments is to use  <code>docker-compose.yml</code> with a corresponding MongoDB and LDAP instance.</p>"},{"location":"getting-started/#deploying-docker-container","title":"Deploying Docker Container","text":"<p>Getting started is made effortless and rapid by utilizing Docker for deployment, without the need for any prerequisites except for a contemporary Docker version.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker</li> <li>Docker Compose </li> <li>Running MongoDB server</li> <li>Running LDAP server</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>After downloading the docker-compose.yml file, review it and identify the service for which you want to adjust the configuration parameters.</p> Docker Compose <pre><code>curl -LO https://enofex.github.io/naikan/docker-compose.yml\ndocker-compose up -d\n</code></pre> <p>Version</p> <p>The 'latest' tag available on Docker Hub consistently represents the most up-to-date stable release.</p>"},{"location":"getting-started/#configuration","title":"Configuration","text":"<p>The Naikan container can be configured using any of the available configuration properties:</p>"},{"location":"getting-started/#mongodb","title":"MongoDB","text":"<p>Connection String URI Format</p> Property Default Description <code>NAIKAN_MONGODB_URI</code> <code>mongodb://localhost:27017/naikan?replicaSet=rs0</code> Mongo database URI. <code>NAIKAN_MONGODB_DATABASE</code> <code>naikan</code> Database name. Override URI database. <code>NAIKAN_MONGODB_TRANSACTION_ENABLED</code> <code>true</code> Enable transaction."},{"location":"getting-started/#ldap","title":"LDAP","text":"Property Default Description <code>NAIKAN_LDAP_ENABLED</code> <code>true</code> Enable LDAP authentication. <code>NAIKAN_LDAP_SERVER_URL</code> <code>ldap://localhost:389</code> LDAP URL of the server. <code>NAIKAN_LDAP_BASEDN</code> <code>dc=example,dc=com</code> Base suffix from which all operations should originate. <code>NAIKAN_LDAP_BIND_USERNAME</code> Login username of the server. <code>NAIKAN_LDAP_BIND_PASSWORD</code> Login password of the server. <code>NAIKAN_LDAP_ANONYMOUS_READ_ONLY</code> <code>true</code> Whether read-only operations should use an anonymous environment. Disabled by default unless a username is set. <code>NAIKAN_LDAP_USER_DN_PATTERNS</code> Sets the pattern which will be used to supply a DN for the user. The pattern should be the name relative to the root DN. <code>NAIKAN_LDAP_USERS_SEARCH_BASE</code> The base used in the user search. <code>NAIKAN_LDAP_USERS_SEARCH_FILTER</code> The filter expression used in the user search. <code>NAIKAN_LDAP_ACTIVE_DIRECTORY_DOMAIN</code> The domain name. Must be provided for Active Directory. <p>Following some example configurations that are known to work of each server implementation. This configuration depends on our schema.</p> Microsoft Active Directory <pre><code> - NAIKAN_LDAP_SERVER_URL=ldaps://ldap.example.com:636/\n - NAIKAN_LDAP_BASEDN=dc=example,dc=com\n - NAIKAN_LDAP_BIND_USERNAME=user@example.com\n - NAIKAN_LDAP_BIND_PASSWORD=password \n - NAIKAN_LDAP_USERS_SEARCH_FILTER=(&amp;(objectClass=user)(userPrincipalName={0}))\n - NAIKAN_LDAP_ACTIVE_DIRECTORY_DOMAIN=example.com\n</code></pre>"},{"location":"getting-started/#cors-headers","title":"CORS Headers","text":"Property Default Description <code>NAIKAN_CORS_ENABLED</code> <code>true</code> Enable CORS. <code>NAIKAN_CORS_ALLOW_ORIGIN</code> <code>*</code> A list of origins for which cross-origin requests are allowed. <code>NAIKAN_CORS_ALLOW_METHODS</code> <code>GET</code>, <code>PUT</code>, <code>POST</code>, <code>PATCH</code>, <code>DELETE</code>, <code>OPTIONS</code> The HTTP methods to allow, e.g. <code>GET</code>, <code>POST</code>, <code>PUT</code>... <code>NAIKAN_CORS_ALLOW_HEADERS</code> <code>*</code> Set the list of headers that a pre-flight request can list as allowed for use during an actual request. <code>NAIKAN_CORS_ALLOW_CREDENTIALS</code> <code>true</code> Whether user credentials are supported. <code>NAIKAN_CORS_MAX_AGE</code> <code>1800</code> Configure how long, as a duration, the response from a pre-flight request can be cached by clients."},{"location":"getting-started/#server","title":"Server","text":"Property Default Description <code>NAIKAN_SERVER_COOKIE_SECURE</code> false Whether to always mark the cookie as secure."},{"location":"getting-started/#jvm","title":"JVM","text":"Property Default Description <code>JAVA_TOOL_OPTIONS</code> To provide more JVM arguments to the JVM, i.e. <code>-XX:ActiveProcessorCount=4</code> DEBUG Level <pre><code> - JAVA_TOOL_OPTIONS=-Dlogging.level.root=DEBUG\n</code></pre>"},{"location":"integration/","title":"Integration","text":""},{"location":"integration/#prerequisites","title":"Prerequisites","text":"<ul> <li>Access to a Naikan instance</li> <li>Access to a REST API that Naikan can consume.: Ensure that you have the necessary authentication and permissions to perform this action.</li> <li>Understand the Naikan Schema: Before creating the <code>naikan.json</code> file, familiarize yourself with the Naikan data schema.</li> </ul>"},{"location":"integration/#creating-a-naikan-json-file","title":"Creating a Naikan JSON File","text":"<p>To manually create a <code>naikan.json</code> file for integration, follow these steps:</p> <ul> <li> <p>Data Collection: Collect the data you want to include in the Naikan instance. Ensure that your data adheres to the schema.</p> </li> <li> <p>Create the JSON File: Create a <code>naikan.json</code> file in the required format and place it at the root of your project. </p> </li> <li> <p>Push Data to Naikan: To push the <code>naikan.json</code> file via the REST API. Ensure that you have the necessary authentication and permissions to perform this action.</p> </li> </ul>"},{"location":"integration/#using-naikan-maven-plugin","title":"Using Naikan Maven Plugin","text":"<p>The Naikan Maven Plugin simplifies data integration by automatically generating information from your project's <code>pom.xml</code> and Git repository. </p> <p>The Naikan Maven Plugin is designed to extract information from your project's <code>pom.xml</code> by default. However, you can enhance the data retrieval process by including missing details within the <code>pom.xml</code> file. When the plugin encounters specific elements or properties in your <code>pom.xml</code>, it will retrieve this information into the generated data for integration with Naikan.</p> <ul> <li>Add the Naikan Maven Plugin to your project's <code>pom.xml</code> as a build plugin:</li> </ul> <pre><code>&lt;!-- uses default configuration --&gt;\n&lt;plugin&gt;\n    &lt;groupId&gt;com.enofex&lt;/groupId&gt;\n    &lt;artifactId&gt;naikan-maven-plugin&lt;/artifactId&gt;\n    &lt;version&gt;lastest version&lt;/version&gt;\n    &lt;executions&gt;\n      &lt;execution&gt;\n        &lt;phase&gt;package&lt;/phase&gt;\n        &lt;goals&gt;\n          &lt;goal&gt;aggregate&lt;/goal&gt;\n        &lt;/goals&gt;\n      &lt;/execution&gt;\n    &lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre> <p>The Naikan Maven Plugin can merge the generated data with an existing <code>naikan.json</code> file if available and store it to your build target of your project.</p> <ul> <li>Push Data to Naikan: To push the <code>naikan.json</code> file via the REST API. Ensure that you have the necessary authentication and permissions to perform this action.</li> </ul>"},{"location":"integration/#custom-naikan-maven-plugin-provider","title":"Custom Naikan Maven Plugin Provider","text":"<p>The Naikan Maven Plugin is designed to be extensible, allowing you to incorporate custom data collection and formatting logic into your integration process. You can achieve this by creating custom providers that adhere to the Java Service API. These providers are dynamically discovered and executed by the plugin, giving you flexibility in gathering and preparing data for integration with Naikan.</p> <p>By extending the Plugin with custom providers and defining their order of execution, you can seamlessly integrate diverse data sources into your Naikan instance while maintaining control over the integration process. This flexibility ensures that your integration aligns perfectly with your project's unique requirements.</p> <p>By exploring custom provider implementations in Naikan Maven Plugin, you can gain valuable insights into how these providers collect and format data. </p>"},{"location":"rest-api/","title":"Rest API","text":""},{"location":"rest-api/#bearer-token","title":"Bearer Token","text":"<p>To ensure secure access to all endpoints within your application, the use of a bearer token is required.</p> <p>Contact your project administrator and refer to the project-specific documentation to obtain a valid bearer token.</p>"},{"location":"rest-api/#openapi-definition","title":"OpenAPI definition","text":"<p>The OpenAPI description is available at the following url:</p> <p><code>{schema}://{hostname}:{port}/api/public/v3/api-docs</code></p>"},{"location":"rest-api/#base-url","title":"Base URL","text":"<p>The base URL is the root endpoint where all API requests originate:</p> <p><code>{schema}://{hostname}:{port}/api/public</code></p> <p>{schema} Refers to the protocol or scheme used.</p> <p>{hostname} Represents the hostname or domain name of the server hosting your API.</p> <p>{port} Signifies the port number through which your API is accessible.</p> <p>/api/public Specifies the path to the public API endpoints.</p>"},{"location":"rest-api/#projects","title":"Projects","text":""},{"location":"rest-api/#create-or-update","title":"Create or Update","text":"<p>Project name</p> <p>If the provided project name is found the project will be updated, if not it will be created.</p> <p>Endpoint: <code>POST /projects</code></p> <p>Description: Creates or update a project.</p> <p>Request Headers:</p> <ul> <li><code>Authorization</code>: Bearer token for authentication</li> <li><code>Content-Type</code>: application/json</li> </ul> <p>Request Body:</p> <pre><code>{\n  \"specVersion\": \"1.0\",\n  \"bomFormat\": \"Naikan\",\n  \"project\": {\n    \"name\": \"Naikan III\"\n  }\n}\n</code></pre> <p>Response:</p> <p>If the project was found with the project name, then it will be updated.</p> HTTP Status: 200 (Ok)<pre><code>HTTP/1.1 200\n</code></pre> <p>If the project was not found with the project name, then it will be created.</p> HTTP Status: 201 (Created)<pre><code>HTTP/1.1 201\nLocation: /projects/{projectId}\n</code></pre>"},{"location":"rest-api/#update","title":"Update","text":"<p>Endpoint: <code>POST /projects/{projectId}</code></p> <p>Description: Update a project.</p> <p>Request Headers:</p> <ul> <li><code>Authorization</code>: Bearer token for authentication</li> <li><code>Content-Type</code>: application/json</li> </ul> <p>Path Parameters:</p> <ul> <li><code>projectId</code>: ID of the project which should be updated</li> </ul> <p>Request Body:</p> <pre><code>{\n  \"specVersion\": \"1.0\",\n  \"bomFormat\": \"Naikan\",\n  \"project\": {\n    \"name\": \"Naikan III\"\n  }\n}\n</code></pre> <p>Response:</p> <p>If the project was found with the project id, then it will be updated.</p> HTTP Status: 200 (Ok)<pre><code>HTTP/1.1 200\n</code></pre>"},{"location":"rest-api/#deployments","title":"Deployments","text":""},{"location":"rest-api/#create","title":"Create","text":"<p>Endpoint: <code>POST /projects/{projectId}/deployments</code></p> <p>Description: Creates a deployment for a specific project.</p> <p>Request Headers:</p> <ul> <li><code>Authorization</code>: Bearer token for authentication</li> <li><code>Content-Type</code>: application/json</li> </ul> <p>Path Parameters:</p> <ul> <li><code>projectId</code>: ID of the project to create the deployment for</li> </ul> <p>Request Body:</p> <pre><code>{\n  \"version\": \"1.0.10\",\n  \"environment\": \"Integration\"\n}\n</code></pre> <p>Response:</p> HTTP Status: 201 (Created)<pre><code>HTTP/1.1 201\nLocation: /{projectId}/deployments/{index}\n</code></pre>"},{"location":"schema/","title":"Schema","text":"<p>You can find the project schema JSON files in the following location: Naikan Model - Project Schema Files</p> <p>These schema files define the structure and properties of the project data in a standardized JSON format. By using these schemas, you can ensure consistency and validation of the project information stored in JSON files. Please navigate to the provided link to access the project schema JSON files or the last one below.</p> <p>Required properties</p> <p>The project name, specVersion and bomFormat are required. All others are optional.</p> bom-1.0.schema.json<pre><code>{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"specVersion\": {\n      \"enum\": [\n        \"1.0\"\n      ]\n    },\n    \"bomFormat\": {\n      \"enum\": [\n        \"Naikan\"\n      ]\n    },\n    \"timestamp\": {\n      \"type\": \"string\"\n    },\n    \"project\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"inceptionYear\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"repository\": {\n          \"type\": \"string\"\n        },\n        \"packaging\": {\n          \"type\": \"string\"\n        },\n        \"groupId\": {\n          \"type\": \"string\"\n        },\n        \"artifactId\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"notes\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ]\n    },\n    \"organization\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"department\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"teams\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    },\n    \"developers\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"department\": {\n              \"type\": \"string\"\n            },\n            \"email\": {\n              \"type\": \"string\"\n            },\n            \"phone\": {\n              \"type\": \"string\"\n            },\n            \"organization\": {\n              \"type\": \"string\"\n            },\n            \"organizationUrl\": {\n              \"type\": \"string\"\n            },\n            \"timezone\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"roles\": {\n              \"type\": \"array\",\n              \"items\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"contacts\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"email\": {\n              \"type\": \"string\"\n            },\n            \"phone\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"roles\": {\n              \"type\": \"array\",\n              \"items\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"technologies\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"version\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": [\n                {\n                  \"type\": \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"licenses\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"url\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    },\n    \"documentations\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"location\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": [\n                {\n                  \"type\": \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"integrations\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"url\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"items\": [\n                {\n                  \"type\": \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"string\"\n        }\n      ]\n    },\n    \"deployments\": {\n      \"type\": \"array\",\n      \"items\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"environment\": {\n              \"type\": \"string\"\n            },\n            \"location\": {\n              \"type\": \"string\"\n            },\n            \"version\": {\n              \"type\": \"string\"\n            },\n            \"timestamp\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      ]\n    },\n    \"repository\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"firstCommit\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"commitId\": {\n              \"type\": \"string\"\n            },\n            \"timestamp\": {\n              \"type\": \"string\"\n            },\n            \"shortMessage\": {\n              \"type\": \"string\"\n            },\n            \"author\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"email\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"changes\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"lines\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"added\": {\n                      \"type\": \"number\"\n                    },\n                    \"deleted\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                },\n                \"files\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"added\": {\n                      \"type\": \"number\"\n                    },\n                    \"deleted\": {\n                      \"type\": \"number\"\n                    },\n                    \"changed\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"totalCommits\": {\n          \"type\": \"number\"\n        },\n        \"defaultBranch\": {\n          \"type\": \"string\"\n        },\n        \"branches\": {\n          \"type\": \"array\",\n          \"items\": [\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          ]\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": [\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"timestamp\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          ]\n        },\n        \"commits\": {\n          \"type\": \"array\",\n          \"items\": [\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"commitId\": {\n                  \"type\": \"string\"\n                },\n                \"timestamp\": {\n                  \"type\": \"string\"\n                },\n                \"shortMessage\": {\n                  \"type\": \"string\"\n                },\n                \"author\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                },\n                \"changes\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"lines\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"added\": {\n                          \"type\": \"number\"\n                        },\n                        \"deleted\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    },\n                    \"files\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"added\": {\n                          \"type\": \"number\"\n                        },\n                        \"deleted\": {\n                          \"type\": \"number\"\n                        },\n                        \"changed\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"specVersion\",\n    \"bomFormat\",\n    \"project\"\n  ]\n}\n</code></pre>"}]}